// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

predicate C__P(diz: Ref)

/** In Viper, exhale should proceed from left to write (earlier Carbon
used to have a multi-phase exhale that delayed the exhale of wildcards).
Thus, exhale acc(x.f, wildcard) && acc(x.f, 1/2) is expected to fail.  */

method C__main(diz: Ref)
   requires diz != null
   requires acc(C__P(diz), write)
{
   //:: ExpectedOutput(exhale.failed:insufficient.permission)
   exhale acc(C__P(diz), wildcard) && acc(C__P(diz), 1 / 2)
}

method test(diz:Ref)
   requires diz != null
   requires acc(C__P(diz), wildcard)
   requires acc(C__P(diz), 1 / 2)
{

}

method C__main2(diz: Ref)
   requires diz != null
   requires acc(C__P(diz), write)
{
   //:: ExpectedOutput(call.precondition:insufficient.permission)
  test(diz)
}