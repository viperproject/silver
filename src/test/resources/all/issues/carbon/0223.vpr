// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

//:: IgnoreFile(/carbon/issue/223/)
field val : Int 

predicate bar(x:Ref) {
  acc(x.val)
}

function get(x: Ref) : Int
  requires forall w:Ref :: {w in Set(x)} w in Set(x) ==> acc(bar(w))
  {
    asserting (x in Set(x)) in unfolding bar(x) in x.val
  }

method set(x:Ref, i:Int) 
  requires bar(x)
  ensures bar(x) && get(x) == i

method test(x:Ref, z:Ref)
  requires forall r:Ref :: r in Set(x,z) ==> bar(r)
  requires x != z
{
  set(x,4)
  assert get(x) == 4
  set(z,3)
  assert get(x) == 4
  set(x,3)
  //:: ExpectedOutput(assert.failed:assertion.false)
  //:: MissingOutput(assert.failed:assertion.false, /carbon/issue/223/)
  assert get(x) == 4
}
