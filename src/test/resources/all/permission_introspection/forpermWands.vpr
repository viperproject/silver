// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int

method m1(x: Ref, y: Ref) {
    inhale acc(x.f)
    inhale x.f > 0
    inhale acc(x.f) --* acc(y.f)

    assert forperm a: Ref, b: Ref [acc(a.f) --* acc(b.f)] :: a.f > 0
    apply acc(x.f) --* acc(y.f)
    assert forperm a: Ref, b: Ref [acc(a.f) --* acc(b.f)] :: false
}

method m2(x: Ref, y: Ref, z: Ref) {
    inhale acc(x.f)
    inhale acc(y.f)
    inhale acc(z.f)
    inhale acc(x.f) --* acc(y.f)
    inhale acc(z.f) --* acc(y.f)
    inhale forperm a: Ref, b: Ref [acc(a.f) --* acc(b.f)] :: a.f > 0 && b.f < 0

    //:: UnexpectedOutput(assert.failed:assertion.false, /carbon/issue/243/)
    assert x.f > 0
    assert y.f < 0

    inhale forperm a: Ref, b: Ref [acc(a.f) --* acc(b.f)] :: a == x

    assert x == z
}

method m3(x: Ref, y: Ref, z: Ref) {
    inhale (let p == (write) in acc(x.f, p)) --* acc(y.f)
    inhale acc(y.f) --* acc(z.f)

    assert forperm a: Ref, b: Ref [(let p == (write) in acc(a.f, p)) --* acc(b.f)] :: a == x && b == y
}
