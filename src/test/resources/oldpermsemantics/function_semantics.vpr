// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/


field f: Int
field g: Int

predicate P(x: Ref) {
    acc(x.f)
}

function double(x: Ref): Int
    requires acc(x.f) && acc(x.f)
    ensures false
{ 4 }

function double2(x: Ref, y: Ref): Int
    requires acc(x.f) && acc(y.f)
    ensures x != y
{ 4 }

function takesFull(x: Ref): Int
    requires acc(x.f)
{ 4 }

function takesFull2(x: Ref): Int
    requires acc(x.f)
{ takesFull(x) }

function takesHalf(x: Ref): Int
    requires acc(x.f, 1/2)
//:: ExpectedOutput(application.precondition:insufficient.permission)
{ takesFull(x)}

//:: ExpectedOutput(function.not.wellformed:insufficient.permission)
function pred(x: Ref): Int
    requires acc(P(x), 1/2)
{
  unfolding P(x) in x.f
}

function pred2(x: Ref): Int
    requires acc(P(x), 1/2)
{
  unfolding acc(P(x), 1/2) in x.f
}

function pred3(x: Ref): Int
    requires acc(P(x), 1/2)
{
  unfolding acc(P(x), wildcard) in x.f
}

function pred4(x: Ref): Int
    requires acc(P(x), wildcard)
{
  unfolding acc(P(x), wildcard) in (unfolding acc(P(x), wildcard) in x.f)
}

//:: ExpectedOutput(function.not.wellformed:insufficient.permission)
function pred5(x: Ref): Int
    requires acc(P(x), none)
{
  unfolding acc(P(x), wildcard) in x.f
}

//:: ExpectedOutput(function.not.wellformed:insufficient.permission)
function pred6(x: Ref): Int
    requires acc(P(x), 1/2)
{
  unfolding acc(P(x), 1/2) in (unfolding acc(P(x), 1/2) in x.f)
}

function pred7(x: Ref): Int
    requires acc(P(x), write)
{
  unfolding acc(P(x), 1/2) in (unfolding acc(P(x), 1/2) in x.f)
}