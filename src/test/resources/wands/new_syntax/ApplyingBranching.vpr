// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field b: Bool
field f: Int

function getFirst(x: Ref): Int
//:: ExpectedOutput(consistency.error)
requires acc(x.b) && (acc(x.b) --* acc(x.b) && (x.b ? acc(x.f) : true)) {
    applying (acc(x.b) --* acc(x.b) && (x.b ? acc(x.f) : true)) in x.b ? x.f : 0
}

function getSecond(x: Ref): Int
//:: ExpectedOutput(consistency.error)
requires acc(x.b) && (acc(x.b) --* acc(x.b) && (x.b ? true : acc(x.f))) {
    applying (acc(x.b) --* acc(x.b) && (x.b ? true : acc(x.f))) in x.b ? 0 : x.f
}

method test0(x: Ref)
requires acc(x.b) && acc(x.f)
ensures acc(x.b) && (acc(x.b) --* acc(x.b) && (x.b ? acc(x.f) : true)) && (getFirst(x) != 0 ==> getFirst(x) == old(x.f)) {
    package (acc(x.b) --* acc(x.b) && (x.b ? acc(x.f) : true))
}

method test1(x: Ref)
requires acc(x.b) && acc(x.f)
ensures acc(x.b) && (acc(x.b) --* acc(x.b) && (x.b ? true : acc(x.f))) && (getSecond(x) != 0 ==> getSecond(x) == old(x.f)) {
    package (acc(x.b) --* acc(x.b) && (x.b ? true : acc(x.f)))
}
